---
import { Code } from "astro:components";
import BaseLayout from "../layouts/BaseLayout.astro";
import Header from "../components/Header.astro";
import Link from "../components/Link.astro";
import { indoc } from "../utils/indoc";
import Button from "../components/Button.astro";

const codeExampleSnippet = indoc`
  import * as std from "std";
  import { cargoBuild } from "rust";

  export default function () {
    // Build a Rust project
    const server = cargoBuild({
      crate: Brioche.glob("src", "Cargo.*"),
    });

    // Put it in a container image
    return std.ociContainerImage({
      recipe: server,
      entrypoint: ["/bin/server"],
    });
  }
`;

const installSnippet = indoc`
  curl --proto '=https' --tlsv1.2 -sSfL 'https://brioche.dev/install.sh' | bash
`;

const helloWorldSnippet = indoc`
  brioche run -r hello_world
`;
---

<BaseLayout>
  <Header />
  <main class="w-full max-w-4xl mx-auto p-4 space-y-4">
    <div
      class="max-w-xl mx-auto bg-accent-200 border border-accent-600 text-black rounded-lg p-2"
      ><a
        href="/blog/announcing-brioche"
        class="flex justify-between items-baseline"
        ><span class="underline text-lg font-bold">Announcing Brioche!</span
        ><span class="text-sm">Read More â†’</span></a
      ></div
    >
    <section class="flex flex-col md:flex-row">
      <div class="flex-0 md:max-w-96">
        <h1
          class="text-6xl font-extrabold text-center text-accent-600 dark:text-accent-200"
          >Brioche</h1
        >
        <p
          class="font-bold text-xl text-center max-w-sm mx-auto md:max-w-none my-4 md:mx-6 md:my-12"
        >
          A delicious package manager for building and running your most complex
          software projects
        </p>
        <div class="flex flex-col items-center mb-4">
          <Button href="/docs">Read the Docs</Button>
        </div>
      </div>
      <Code
        code={codeExampleSnippet}
        lang="typescript"
        theme="vitesse-dark"
        class="flex-1 p-4 rounded-2xl border border-gray-300 dark:border-gray-700"
      />
    </section>
    <section class="md:max-w-xl md:mx-auto">
      <h2
        class="text-4xl font-extrabold text-accent-600 dark:text-accent-200 md:-ml-12 my-4"
        >Get Started</h2
      >
      <div class="space-y-6 divide-y divide-gray-200 dark:divide-gray-700">
        <div>
          <p class="text-xl"
            >Install in seconds, no root permissions required:</p
          >
          <Code
            code={installSnippet}
            lang="shell"
            theme="vitesse-dark"
            class="flex-1 p-4 my-4 text-xs border border-gray-300 rounded-2xl dark:border-gray-700"
          />
          <p class="text-xl"
            >...or <Link href="/docs/installation">view the docs</Link> for more
            installation options</p
          >
          <p class="text-gray-400 mt-4 text-center"
            >(Currently x86-64 Linux only, more platforms coming soon)</p
          >
        </div>
        <div>
          <p class="text-xl mt-6">Try it out by running Hello World:</p>
          <Code
            code={helloWorldSnippet}
            lang="shell"
            theme="vitesse-dark"
            class="flex-1 p-4 my-4 border border-gray-300 rounded-2xl dark:border-gray-700"
          />
          <p class="text-gray-400 mt-4 text-center"
            >(Will take several minutes on first run to download common files
            and libraries)</p
          ></div
        ></div
      >
    </section>
    <section class="md:max-w-xl md:mx-auto">
      <h2
        class="text-4xl font-extrabold text-accent-600 dark:text-accent-200 md:-ml-12 my-4"
        >Features</h2
      >
      <ul class="list-disc text-xl space-y-4 mx-4 md:mx-0">
        <li
          ><strong>Caching</strong> - All build artifacts are saved and re-used between
          builds, saving you time when only a part of your project changes. You can
          even share the cache between machines using a self-hosted registry</li
        >
        <li
          ><strong>Lockfiles</strong> - All of your dependencies are automatically
          saved in a lockfile, making your builds super reliable for everyone on
          your team</li
        >
        <li>
          <strong>TypeScript</strong> - Build scripts are written in <Link
            href="https://www.typescriptlang.org/">TypeScript</Link
          >, giving you the flexibility of a familiar full programming language
          (with great type checking and editor completions!)
        </li>
        <li>
          <strong>Cross-ecosystem</strong> - Build your project regardless of language,
          and easily mix different languages and ecosystems in one project
        </li>
        <li>
          <strong>Cross-compilation</strong>
          <span class="text-neutral-400">(work in progress)</span> - Easily build
          your project <em>from</em> any platform, <em>to</em> any platform
        </li>
        <li>
          <strong>Dev environments</strong>
          <span class="text-neutral-400">(work in progress)</span> - Set up a suite
          of tools to help onboard new team members quickly
        </li>
      </ul>
    </section>
  </main>
</BaseLayout>
